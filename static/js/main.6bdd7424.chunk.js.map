{"version":3,"sources":["js/helpers/Globals.js","js/functions/ColourCalculators.js","js/functions/PlayIcon.js","js/functions/SaveJSONToFile.js","js/classes/Diamond.js","audio/diamonds-no-2.ogg","audio/diamonds-no-2.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","TetradicColourCalculator","hue","saturation","brightness","set","i","colour","color","push","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","SaveJSONToFile","jsonData","filename","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","Diamond","startX","startY","hueOrColour","maxSize","opacity","speed","this","p","x","y","isObject","_getHue","size","variable","Array","isArray","xDist","yDist","sat","bright","loops","stroke","quad","noFill","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","noteSet2","scheduleCueSet","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","length","note","ticks","time","addCue","xSize","ySize","setup","createCanvas","background","colorMode","HSB","cells","require","random","strokeWeight","noLoop","draw","isPlaying","generateCells","loopIndex","key","some","r","startingPositions","executeCueSet1","duration","shuffle","bigDiamonds","smallDiamonds","lines","baseHue","colours","numberOfLines","j","x1","y1","x2","y2","strokeColor","diamondIndex","forEach","diamond","index","startingPos","delay","line","setTimeout","translate","currentMidi","sizeAdjuster","executeCueSet2","positions","location","indexOf","hasStarted","mousePressed","pause","parseInt","currentTime","buffer","reset","dataLayer","title","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6bdd7424.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","function TetradicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction TriadicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 3){\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        hue = hue + 120 < 360 ? hue + 120 : hue - 240;\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction ComplementaryColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 2){\n        hue = hue + i * 180;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nexport { TetradicColourCalculator, TriadicColourCalculator, ComplementaryColourCalculator };","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function SaveJSONToFile(jsonData, filename = 'json') {\n    const fileData = JSON.stringify(jsonData);\n    const blob = new Blob([fileData], {type: \"text/plain\"});\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = `${filename}.json`;\n    link.href = url;\n    link.click();\n}\n\nexport default SaveJSONToFile;\n","export default class Diamond {\r\n    constructor(p5, startX, startY, hueOrColour, maxSize, opacity = 1, speed = 1) {\r\n        this.p = p5;\r\n        this.x = startX;\r\n        this.y = startY;\r\n        this.colour = this.isObject(hueOrColour) ? hueOrColour : this.p.color(hueOrColour, 100, 100);\r\n        this.hue = this.colour._getHue();\r\n        this.size = speed > 1 ? 0 : maxSize / 16;\r\n        this.maxSize = speed > 1 ? maxSize / 2 : maxSize / 2 * 0.7; \r\n        this.opacity = opacity;\r\n        this.speed = speed;\r\n    }\r\n\r\n    isObject(variable) {\r\n        return typeof variable === 'object' &&\r\n            variable !== null &&\r\n            !Array.isArray(variable);\r\n    }    \r\n\r\n    update() {\r\n        if(this.size < this.maxSize) {\r\n            this.size = this.size + this.speed;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        let xDist = this.size / 4 * 3, \r\n            yDist = this.size, \r\n            hue = this.hue,\r\n            sat = 100, \r\n            bright = 100,\r\n            loops = this.speed > 1 ? 1 : 20; \r\n        this.p.stroke(this.hue, 0, 100, this.opacity);\r\n        this.p.fill(hue, sat, bright, this.opacity);\r\n        for (let i = 0; i < loops; i++) {\r\n            this.p.quad(\r\n                this.x, \r\n                this.y  - yDist, \r\n                this.x + (xDist / 2), \r\n                this.y, \r\n                this.x,\r\n                this.y + yDist, \r\n                this.x - (xDist / 2), \r\n                this.y, \r\n            );\r\n            xDist = xDist - (xDist / 10);\r\n            yDist = yDist - (yDist / 10);\r\n            hue = hue - 15 < 0 ? hue + 345 : hue - 15;\r\n            sat = sat - 10;\r\n            bright = bright - 10;\r\n            this.p.stroke(hue, sat, bright, this.opacity);\r\n            this.p.noFill();\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/diamonds-no-2.fa8ab8a0.ogg\";","export default __webpack_public_path__ + \"static/media/diamonds-no-2.d22dc579.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport { TetradicColourCalculator } from './functions/ColourCalculators';\nimport PlayIcon from './functions/PlayIcon.js';\nimport SaveJSONToFile from './functions/SaveJSONToFile.js';\nimport Diamond from './classes/Diamond.js';\n\nimport audio from \"../audio/diamonds-no-2.ogg\";\nimport midi from \"../audio/diamonds-no-2.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[2].notes; // Synth 1 - Sub Bass 2\n                    const noteSet2 = result.tracks[5].notes; // Synth 2 - Jupiter 4\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.xSize = 0;\n\n        p.ySize = 0;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.background(0);\n            p.colorMode(p.HSB);\n            p.cells = require('../json/grid-64x64.json');\n            p.xSize = p.height / p.random([64, 48]);\n            p.ySize = p.width / p.random([64, 48]);\n            p.noFill();\n            p.strokeWeight(4);\n            p.noLoop();\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n\n            }\n        }\n\n        p.cells = [];\n\n        p.generateCells = () => {\n            let loopIndex = 1;\n            for (let i = 0; i <= 64; i++) {\n                for (let x = -i; x < i; x++) {\n                    for (let y = -i; y < i; y++) {\n\n                        const key = x + '-' + y;\n                        if (! p.cells.some(r => r.key === key)) {\n                            p.cells.push(\n                                {\n                                    key: key,\n                                    x: x,\n                                    y: y,\n                                    loopIndex: loopIndex\n                                }\n                            );\n                        }\n                        \n                    }\n                }\n                loopIndex++;\n            }\n            SaveJSONToFile(p.cells, 'grid.json');\n        }\n\n        p.startingPositions = [\n            {\n                x: 1,\n                y: 1\n            },\n            {\n                x: 1,\n                y: 3\n            },\n            {\n                x: 3,\n                y: 1\n            },\n            {\n                x: 3,\n                y: 3\n            },\n        ];\n\n\n        p.executeCueSet1 = (note) => {\n\n            const { currentCue, duration } = note;\n            p.background(0);\n            if(currentCue % 4 === 1){\n                p.startingPositions = p.shuffle(p.startingPositions);\n                p.bigDiamonds = [];\n                p.smallDiamonds = [];\n            }\n\n            \n\n            p.xSize = p.height / p.random([80, 64, 32, 16, 8]) / 4;\n            p.ySize = p.width / p.random([80, 64, 32, 16, 8]) / 4;\n\n            p.lines = [];\n\n            const baseHue = p.random(0, 360);\n            let colours = [];\n\n            p.strokeWeight(p.random([2,3,4]));\n\n            for (let i = 0; i < 32; i++) {\n                \n                \n                if(i > 0) {\n                    colours = TetradicColourCalculator(p, baseHue, 50 + 50 / 32 * i, 100 - 64 / 32 * i);\n                    const numberOfLines = i * 2 + 1;\n                    // connecting cell and top left\n\n                    for (let j = 1; j <= numberOfLines; j++) {\n                        const x1 = j === numberOfLines ? p.xSize * (j - 2) * -1 : p.xSize * j * -1,\n                            y1 = p.ySize * (j - numberOfLines),\n                            x2 = p.xSize  * (j - 1)* -1, \n                            y2 = p.ySize * (j - 1 - numberOfLines);\n                        p.lines.push({\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            strokeColor: colours[0]\n                        });\n                    }\n                    \n                    //top right\n                    \n                    for (let j = 1; j <= numberOfLines; j++) {\n                        const x1 = p.xSize * (j - 1),\n                            y1 = p.ySize * (j - 1 - numberOfLines),\n                            x2 = p.xSize * j, \n                            y2 = p.ySize * (j - numberOfLines);\n                        p.lines.push({\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            strokeColor: colours[1]\n                        });\n                    }\n\n                    // bottom right\n                    for (let j = 1; j <= numberOfLines; j++) {\n                        const x1 = p.xSize * j,\n                            y1 = p.ySize * (j - numberOfLines) * -1,\n                            x2 = p.xSize  * (j - 1), \n                            y2 = p.ySize * (j - 1 - numberOfLines) * -1;\n                        p.lines.push({\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            strokeColor: colours[2]\n                        });\n                    }\n\n                    // bottom left\n                    for (let j = 1; j <= numberOfLines; j++) {\n                            const x1 = p.xSize * (j - 1) * -1,\n                            y1 = p.ySize * (j - 1 - numberOfLines) * -1,\n                            x2 = p.xSize * j * -1, \n                            y2 = p.ySize * (j - numberOfLines) * -1;\n                        p.lines.push({\n                            x1: x1,\n                            y1: y1,\n                            x2: x2,\n                            y2: y2,\n                            strokeColor: colours[3]\n                        });\n                    }\n                }\n                else {\n                    // top right\n                    p.lines.push({\n                        x1: p.xSize * 0,\n                        y1: p.ySize * -1,\n                        x2: p.xSize * 1,\n                        y2: p.ySize * 0,\n                        strokeColor: p.color(p.random(0,255), p.random(0,255), p.random(0,255))\n                    })\n                    // bottom right\n                    p.lines.push({\n                        x1: p.xSize * 1,\n                        y1: p.ySize * 0,\n                        x2: p.xSize * 0,\n                        y2: p.ySize * 1,\n                        strokeColor: p.color(p.random(0,255), p.random(0,255), p.random(0,255))\n                    });\n                    // bottom left\n                    p.lines.push({\n                        x1: p.xSize * 0,\n                        y1: p.ySize * 1,\n                        x2: p.xSize * -1,\n                        y2: p.ySize * 0,\n                        strokeColor: p.color(p.random(0,255), p.random(0,255), p.random(0,255))\n                    });\n                }\n            }\n\n            const diamondIndex = currentCue % 4 ? currentCue % 4 - 1 : 3; \n            p.bigDiamonds[diamondIndex] = p.lines;\n\n            p.bigDiamonds.forEach((diamond, index) => {\n                const lines = diamond, \n                    startingPos = p.startingPositions[index],\n                    { x, y } = startingPos,\n                    startX = p.width / 4 * x,\n                    startY = p.height / 4 * y;\n\n                const delay = (duration * 1000 / lines.length) * 0.5;\n                for (let i = 0; i < lines.length; i++) {\n                    const line = lines[i],\n                        { x1, y1, x2, y2, strokeColor } = line;\n                    \n\n                    setTimeout(\n                        function () {\n                            p.translate(startX, startY);\n                            p.stroke(strokeColor);\n                            p.line(x1,y1,x2,y2);\n                            p.translate(-startX, -startY);\n                        },\n                        (delay * i)\n                    );\n                    \n                }\n            });\n        }\n\n        p.currentMidi = 0;\n\n        p.sizeAdjuster = 3;\n\n        p.executeCueSet2 = (note) => {\n            const { currentCue, midi } = note;\n            p.sizeAdjuster = p.currentMidi === midi ? p.sizeAdjuster - 1 : 3;\n            p.currentMidi = midi;\n            const positions = [\n                {\n                    x: 7,\n                    y: 4\n                },\n                {\n                    x: 4,\n                    y: 7\n                },\n                {\n                    x: 1,\n                    y: 4\n                },\n                {\n                    x: 4,\n                    y: 1\n                },\n            ];\n\n            const location = [62, 59, 57, 60].indexOf(midi)\n\n            p.smallDiamonds.push(\n                new Diamond(\n                    p,\n                    p.width / 8 * positions[location].x,\n                    p.height / 8  * positions[location].y,\n                    p.random(0, 360),\n                    p.width / 2 * p.sizeAdjuster, \n                    100, \n                    0\n                )\n            );\n            \n\n            p.smallDiamonds.forEach((diamond) => {\n                diamond.draw();\n            });\n        }\n\n        p.hasStarted = false;\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                        if (typeof window.dataLayer !== typeof undefined){\n                            window.dataLayer.push(\n                                { \n                                    'event': 'play-animation',\n                                    'animation': {\n                                        'title': document.title,\n                                        'location': window.location.href,\n                                        'action': 'replaying'\n                                    }\n                                }\n                            );\n                        }\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\n                        window.dataLayer.push(\n                            { \n                                'event': 'play-animation',\n                                'animation': {\n                                    'title': document.title,\n                                    'location': window.location.href,\n                                    'action': 'start playing'\n                                }\n                            }\n                        );\n                        p.hasStarted = false\n                    }\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}